{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","base.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","components/Inventory.js","sample-fishes.js","components/Fish.js","App.js","components/NotFound.js","components/StorePicker.js","components/Router.js","index.js"],"names":["Header","tagline","className","formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","Order","props","renderOrderListItem","key","fishMenu","order","deleteOrderFish","Object","keys","fish","count","isAvailable","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","onClick","state","this","fishesInOrder","totalPrice","reduce","prevSum","map","React","Component","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","AddFishForm","nameRef","createRef","priceRef","isAvailableRef","descRef","imageRef","createFish","e","preventDefault","current","value","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","type","placeholder","ref","required","EditFishForm","onEditFormChange","fishId","deleteFish","onChange","Login","authenticate","Inventory","authHandler","authData","a","fetch","storeId","context","store","owner","post","data","user","uid","setState","provider","authProvider","auth","signInWithPopup","then","logOut","console","log","signOut","onAuthStateChanged","loadSampleFishes","fishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","index","details","src","alt","disabled","App","sampleFishes","Date","now","newFishMenu","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","StorePicker","goToStore","selectedStoreName","inputRef","history","push","defaultValue","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.9030fcbb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// Difference between PropTypes and Typescript is basically that PropTypes validates at runtime while Typescript checks at compile time (static type checking)\r\n// They are not the same thing and both can have their uses - e.g. PropTypes can be useful when getting external data from an API, which can only be received (and checked) at runtime.\r\n\r\nconst Header = ({tagline}) => (\r\n        <header className=\"top\">\r\n            <h1>Catch\r\n                <span className=\"ofThe\">\r\n                    <span className=\"of\">Of</span>\r\n                    <span className=\"the\">The</span>\r\n                    </span>\r\n                    Day</h1>\r\n            <h3 className=\"tagline\">\r\n                <span>{tagline}</span>\r\n            </h3>\r\n        </header>\r\n    );\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header;\r\n","export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"gullible\",\r\n    \"hilarious\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugly\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"regretful\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const fish = [\r\n    \"anchovies\",\r\n    \"anglerfish\",\r\n    \"barracudas\",\r\n    \"blobfish\",\r\n    \"catfish\",\r\n    \"carps\",\r\n    \"cods\",\r\n    \"dragonfish\",\r\n    \"eels\",\r\n    \"flounders\",\r\n    \"guppies\",\r\n    \"haddocks\",\r\n    \"herrings\",\r\n    \"jellyfish\",\r\n    \"krills\",\r\n    \"lionfish\",\r\n    \"megalodons\",\r\n    \"oysters\",\r\n    \"piranhas\",\r\n    \"pufferfish\",\r\n    \"salmons\",\r\n    \"sardines\",\r\n    \"seahorses\",\r\n    \"sharks\",\r\n    \"starfish\",\r\n    \"stingrays\",\r\n    \"tunas\",\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(fish)}`;\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { formatPrice } from \"../helpers\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass Order extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    fishMenu: PropTypes.object,\r\n    order: PropTypes.object,\r\n    deleteOrderFish: PropTypes.func,\r\n  }\r\n\r\n  // calcTotalSum = (order) => {\r\n  //   const fishesInOrder = Object.keys(order);\r\n\r\n  //   if (fishesInOrder.length === 0) return;\r\n\r\n  //   const totalSum = fishesInOrder.reduce((totalSum, fish) => {\r\n  //     if (this.props.fishMenu[fish].available) {\r\n  //       return (\r\n  //         totalSum + this.props.order[fish] * this.props.fishMenu[fish].price\r\n  //       );\r\n  //     }\r\n  //   }, 0);\r\n\r\n  //   return <p>{formatPrice(totalSum)}</p>;\r\n  // };\r\n\r\n  renderOrderListItem = (key) => {\r\n    const { fishMenu, order, deleteOrderFish } = this.props;\r\n    // First make sure the fishMenu actually contains anything\r\n    if (Object.keys(fishMenu).length === 0) return null;\r\n    const fish = fishMenu[key];\r\n    const count = order[key];\r\n    const isAvailable = fish && fish.isAvailable;\r\n    const transitionOptions = {\r\n      classNames: \"order\",\r\n      key,\r\n      timeout: { enter: 250, exit: 250 },\r\n    };\r\n\r\n    if (isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            <span>\r\n              <TransitionGroup component=\"span\" className=\"count\">\r\n                <CSSTransition\r\n                  classNames=\"count\"\r\n                  // setting count as key allows us to have separate elements for two count values at the same time - one entering, the other exiting\r\n                  key={count}\r\n                  timeout={{ enter: 250, exit: 250 }}\r\n                >\r\n                  <span>{count}</span>\r\n                </CSSTransition>\r\n              </TransitionGroup>\r\n              lbs {fish.name}\r\n            </span>\r\n              {formatPrice(count * fish.price)}\r\n              <button onClick={() => deleteOrderFish(key)}>\r\n                &times;\r\n              </button>\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    } else\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            Sorry, {fish ? fish.name : \"fish\"} is no longer available!\r\n            <button onClick={() => deleteOrderFish(key)}>\r\n              &times;\r\n            </button>\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const { fishMenu, order } = this.props;\r\n    const fishesInOrder = Object.keys(order);\r\n    const totalPrice = fishesInOrder.reduce((prevSum, key) => {\r\n      const fish = fishMenu[key];\r\n      const count = order[key];\r\n      const isAvailable = fish && fish.isAvailable; // to check if the fish hasn't been deleted in the meantime\r\n      return isAvailable ? prevSum + count * fish.price : prevSum;\r\n    }, 0);\r\n\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        {/* Below: if there are no fishes in the menu, order list shouldn't be generated - especially important if we're loading the order from localStorage, which would typically load faster than the fishMenu from firebase */}\r\n        {Object.keys(fishMenu).length === 0 ? null : (\r\n          // component property used to indicate what component should be rendered out in the end\r\n          <TransitionGroup component=\"ul\" className=\"order\">\r\n            {fishesInOrder.map(this.renderOrderListItem)}\r\n          </TransitionGroup>\r\n        )}\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong>{formatPrice(totalPrice)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import Rebase from \"re-base\";\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyBED8Pk7YVzcGdFWO8NHAr-l2ANDXvc168\",\r\n  authDomain: \"catch-of-the-day-by-filip.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://catch-of-the-day-by-filip-default-rtdb.europe-west1.firebasedatabase.app\",\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// named export\r\nexport {firebaseApp};\r\n\r\n// default export\r\nexport default base;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddFishForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    addFish: PropTypes.func,\r\n  }\r\n\r\n// TODO remove refs and use controlled components\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  isAvailableRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  createFish = (e) => {\r\n    e.preventDefault();\r\n\r\n    const fish = {\r\n      \r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value),\r\n      isAvailable: this.isAvailableRef.current.value === \"available\" ? true : false,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value,\r\n    };\r\n\r\n    this.props.addFish(fish);\r\n\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" type=\"text\" placeholder=\"Name\" ref={this.nameRef} required/>\r\n        <input name=\"price\" type=\"number\" placeholder=\"Price\" ref={this.priceRef} required/>\r\n        <select name=\"isAvailable\" ref={this.isAvailableRef} required>\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea name=\"desc\" placeholder=\"Description\" ref={this.descRef} required/>\r\n        <input name=\"image\" type=\"text\" placeholder=\"Image\" ref={this.imageRef} required/>\r\n        <button type=\"submit\">+ Add Fish </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditFishForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  static propTypes = {\r\n    fish: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      isAvailable: PropTypes.bool,\r\n      price: PropTypes.number,\r\n    }).isRequired,\r\n    fishId: PropTypes.string.isRequired,\r\n    onEditFormChange: PropTypes.func.isRequired,\r\n    deleteFish: PropTypes.func.isRequired,\r\n  }\r\n\r\n  render() {\r\n    const { fish, onEditFormChange, fishId, deleteFish } = this.props;\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={fish.name}\r\n          onChange={(e) => onEditFormChange(fishId, e)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          name=\"price\"\r\n          value={fish.price}\r\n          onChange={(e) => onEditFormChange(fishId, e)}\r\n        />\r\n        <select\r\n          type=\"text\"\r\n          name=\"isAvailable\"\r\n          value={fish.isAvailable ? \"available\" : \"unavailable\"}\r\n          onChange={(e) => onEditFormChange(fishId, e)}\r\n        >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea\r\n          type=\"text\"\r\n          name=\"desc\"\r\n          value={fish.desc}\r\n          onChange={(e) => onEditFormChange(fishId, e)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          value={fish.image}\r\n          onChange={(e) => onEditFormChange(fishId, e)}\r\n        />\r\n        <button onClick={() => deleteFish(fishId)}>Remove fish</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = (props) => {\r\n  return (\r\n    <nav className=\"login\">\r\n      <h2>Inventory Login</h2>\r\n      <p>Sign in to manage your store's inventory</p>\r\n      <button\r\n        className=\"github\"\r\n        onClick={() => {\r\n          props.authenticate(\"Github\");\r\n        }}\r\n      >\r\n        Log in with Github\r\n      </button>\r\n      <button\r\n        className=\"facebook\"\r\n        onClick={() => {\r\n          props.authenticate(\"Facebook\");\r\n        }}\r\n      >\r\n        Log in with Facebook\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Login;\r\n","import React, { useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\n\r\nclass Inventory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      uid: null,\r\n      owner: null,\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    fishMenu: PropTypes.object.isRequired,\r\n    addFish: PropTypes.func.isRequired,\r\n    loadSampleFishes: PropTypes.func.isRequired,\r\n    onEditFormChange: PropTypes.func.isRequired,\r\n    deleteFish: PropTypes.func.isRequired,\r\n  };\r\n\r\n  // Automatically log in if logged in before\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if(user) this.authHandler({ user })\r\n    })\r\n  }\r\n\r\n  authHandler = async (authData) => {\r\n    // 1. Look up the current store if the database\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    // 2. Claim it if there's no owner\r\n    if (!store.owner) {\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid,\r\n      });\r\n    }\r\n    // 3. Set the state of the inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid,\r\n    });\r\n  };\r\n\r\n  authenticate = (provider) => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n  };\r\n\r\n  logOut = async () => {\r\n    console.log('logOut')\r\n    await firebase.auth().signOut();\r\n    this.setState({\r\n      uid: null,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      fishMenu,\r\n      addFish,\r\n      loadSampleFishes,\r\n      onEditFormChange,\r\n      deleteFish,\r\n    } = this.props;\r\n\r\n    const logOut = <button onClick={this.logOut}>Log out!</button>;\r\n    // 1. Check if they are logged in\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n\r\n    // 2. Check if they are the owner of the store\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry, you are not the owner!</p>\r\n          {logOut}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // 3. Then they must be the owner - just render the inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logOut}\r\n        {Object.keys(fishMenu).map((key) => (\r\n          <EditFishForm\r\n            key={key}\r\n            fishId={key}\r\n            fish={fishMenu[key]}\r\n            onEditFormChange={onEditFormChange}\r\n            deleteFish={deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={addFish} />\r\n        <button onClick={loadSampleFishes}>Load Sample Fishes</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","// This is just some sample data so you don't have to think of your own!\r\nconst fishes = {\r\n  fish1: {\r\n    name: \"Pacific Halibut\",\r\n    image: \"/images/hali.jpg\",\r\n    desc:\r\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\r\n    price: 1724,\r\n    isAvailable: true\r\n  },\r\n\r\n  fish2: {\r\n    name: \"Lobster\",\r\n    image: \"/images/lobster.jpg\",\r\n    desc:\r\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\r\n    price: 3200,\r\n    isAvailable: true\r\n  },\r\n\r\n  fish3: {\r\n    name: \"Sea Scallops\",\r\n    image: \"/images/scallops.jpg\",\r\n    desc:\r\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\r\n    price: 1684,\r\n    isAvailable: false\r\n  },\r\n\r\n  fish4: {\r\n    name: \"Mahi Mahi\",\r\n    image: \"/images/mahi.jpg\",\r\n    desc:\r\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\r\n    price: 1129,\r\n    isAvailable: true\r\n  },\r\n\r\n  fish5: {\r\n    name: \"King Crab\",\r\n    image: \"/images/crab.jpg\",\r\n    desc:\r\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\r\n    price: 4234,\r\n    isAvailable: true\r\n  },\r\n\r\n  fish6: {\r\n    name: \"Atlantic Salmon\",\r\n    image: \"/images/salmon.jpg\",\r\n    desc:\r\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\r\n    price: 1453,\r\n    isAvailable: true\r\n  },\r\n\r\n  fish7: {\r\n    name: \"Oysters\",\r\n    image: \"/images/oysters.jpg\",\r\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\r\n    price: 2543,\r\n    isAvailable: true\r\n  },\r\n\r\n  fish8: {\r\n    name: \"Mussels\",\r\n    image: \"/images/mussels.jpg\",\r\n    desc:\r\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\r\n    price: 425,\r\n    isAvailable: true\r\n  },\r\n\r\n  fish9: {\r\n    name: \"Jumbo Prawns\",\r\n    image: \"/images/prawns.jpg\",\r\n    desc:\r\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\r\n    price: 2250,\r\n    isAvailable: true\r\n  }\r\n};\r\n\r\nexport default fishes;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { formatPrice } from \"../helpers\";\r\n\r\nclass Fish extends React.Component {\r\n  static propTypes = {\r\n    details: PropTypes.shape({\r\n      image: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      desc: PropTypes.string.isRequired,\r\n      isAvailable: PropTypes.bool.isRequired,\r\n      price: PropTypes.number.isRequired,\r\n    }),\r\n    addToOrder: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.props.addToOrder(this.props.index);\r\n  };\r\n\r\n  render() {\r\n    const { image, name, price, desc, isAvailable } = this.props.details;\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button\r\n          disabled={!isAvailable}\r\n          onClick={() => this.props.addToOrder(this.props.index)}\r\n        >\r\n          {isAvailable ? \"Add to order\" : \"SOLD OUT!\"}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fish;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport Order from \"./components/Order\";\r\nimport Inventory from \"./components/Inventory\";\r\nimport sampleFishes from \"./sample-fishes\";\r\nimport Fish from \"./components/Fish\";\r\nimport base from \"./base\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishMenu: {},\r\n    order: {},\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    const localStorageRef = localStorage.getItem(`${params.storeId}-order`);\r\n    if (localStorageRef) {\r\n      this.setState({\r\n        order: JSON.parse(localStorageRef),\r\n      });\r\n    }\r\n    this.ref = base.syncState(`${params.storeId}/fishMenu`, {\r\n      // forward slash used to go deeper into objects\r\n      context: this,\r\n      state: \"fishMenu\",\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { params } = this.props.match;\r\n    localStorage.setItem(\r\n      `${params.storeId}-order`,\r\n      JSON.stringify(this.state.order)\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref); // to stop listening for updates\r\n  }\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({\r\n      fishMenu: sampleFishes,\r\n    });\r\n  };\r\n\r\n  addFish = (fish) => {\r\n    const fishMenu = { ...this.state.fishMenu };\r\n\r\n    fishMenu[`fish${Date.now()}`] = fish;\r\n\r\n    this.setState({\r\n      fishMenu, // can be used instead of fishMenu: fishMenu\r\n    });\r\n  };\r\n\r\n  addToOrder = (key) => {\r\n    const order = { ...this.state.order };\r\n\r\n    order[key] = order[key] + 1 || 1;\r\n\r\n    this.setState({\r\n      order,\r\n    });\r\n  };\r\n\r\n  onEditFormChange = (fishId, e) => {\r\n    const { value, name } = e.currentTarget;\r\n\r\n    const newFishMenu = { ...this.state.fishMenu };\r\n\r\n    if (name === \"isAvailable\") {\r\n      newFishMenu[fishId][name] = value === \"available\" ? true : false;\r\n    } else {\r\n      newFishMenu[fishId][name] = value;\r\n    }\r\n\r\n    this.setState({\r\n      fishMenu: newFishMenu,\r\n    });\r\n  };\r\n\r\n  deleteFish = (key) => {\r\n    // 1. take a copy of state\r\n    const fishMenu = {...this.state.fishMenu};\r\n    // 2. update the state (remove from menu)\r\n    fishMenu[key] = null; // better than using delete since we're mirrorring to Firebase and delete wouldn't work on Firebase. Null works, though.\r\n    // 3. update state\r\n    this.setState({ fishMenu });\r\n  }\r\n\r\n  deleteOrderFish = (key) => {\r\n    // 1. take a copy of state\r\n    const order = {...this.state.order};\r\n    // 2. remove item from order\r\n    delete order[key]; // OK, since order is not mirrorred to Firebase\r\n    // 3. update state\r\n    this.setState({ order });\r\n  }\r\n\r\n  // TODO After course is finished, re-write the code without refs\r\n  //   addFish = (e) => {\r\n  //     e.preventDefault();\r\n\r\n  //     const formValues = [...e.target.elements].slice(0, -1);\r\n  //     const newFish = {};\r\n\r\n  //     formValues.forEach(element => {\r\n  //       const {value, name, type} = element;\r\n  //       if(type === \"number\") {\r\n  //         newFish[name] = parseFloat(value);\r\n  //       } else if (type === \"select-one\") {\r\n  //         newFish.isAvailable = (value === \"available\" ? true : false);\r\n  //     } else {\r\n  //       newFish[name] = value;\r\n  //     }\r\n\r\n  //     const fishMenu = {...this.state.fishMenu};\r\n\r\n  //     fishMenu[`fish${Date.now()}`] = newFish;\r\n\r\n  //     this.setState({\r\n  //       fishMenu: fishMenu,\r\n  //     })\r\n  //   }\r\n  //     );\r\n  // }\r\n\r\n  render() {\r\n    const { fishMenu, order } = this.state;\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(fishMenu).map((key) => (\r\n              <Fish\r\n                key={key}\r\n                details={fishMenu[key]}\r\n                index={key}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order fishMenu={fishMenu} order={order} deleteOrderFish={this.deleteOrderFish}/>\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishMenu={fishMenu}\r\n          onEditFormChange={this.onEditFormChange}\r\n          deleteFish={this.deleteFish}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nclass NotFound extends React.Component {\r\nconstructor(props) {\r\nsuper(props);\r\nthis.state = {};\r\n}\r\n\r\nrender() {\r\nreturn (\r\n<div>\r\n    <h2>Not Found!!</h2> \r\n</div>\r\n)\r\n}\r\n}\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { getFunName } from \"./../helpers\";\r\n\r\nclass StorePicker extends React.Component {\r\n  constructor() {\r\n    super();\r\n    // using refs instead of state for practice purposes\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  static propTypes = {\r\n    history: PropTypes.object,\r\n  }\r\n\r\n  goToStore = (e) => {\r\n    e.preventDefault();\r\n\r\n    const selectedStoreName = this.inputRef.current.value;\r\n\r\n    this.props.history.push(`/store/${selectedStoreName}`);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h1 className=\"store-selector__header\">Select A Store</h1>\r\n        <input\r\n          type=\"text\"\r\n          ref={this.inputRef}\r\n          defaultValue={getFunName()}\r\n          required\r\n        ></input>\r\n        <button type=\"submit\">Let's go ➡</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;\r\n","import React from 'react'; // Only for us to be able to use JSX\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport App from '../App';\r\nimport NotFound from './NotFound';\r\nimport StorePicker from './StorePicker';\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n    <Switch>\r\n        <Route exact path=\"/\" component={StorePicker}/>\r\n        <Route path=\"/store/:storeId\" component={App}/>\r\n        <Route component={NotFound}/>\r\n    </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default Router;","import React from \"react\";\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router'\r\nimport './css/style.css';\r\n\r\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}